HEADER<{{
Action()
{
  char command[1024]; 
  char line[100];
  long file_stream; 
  char fileName[ 1024 ];
  int len;

  sprintf( fileName, "testSequence%s", lr_eval_string("{vuid}")); 
  sprintf( command, "java -jar mbt-2.2-beta14.jar xml -f test.xml > %s", fileName );
  lr_output_message("Running the command: %s", command );
  system( command );


  if ((file_stream = fopen(fileName, "r")) == NULL ) { 
    lr_error_message("Cannot open %s", fileName); 
    return -1; 
  }  else {
    lr_output_message("Success opening %s", fileName); 
  }

  while ( fgets(line, 100, file_stream) != NULL ) {
    len = strlen( line );
    line[ len - 1 ] = '\0';
    lr_output_message("The line is '%s'", line); 

    /* This is only here because of how mbt source code generator
     * functionality works. */
    if ( strcmp("DUMMY", line ) == 0 ) {
      dummy();
    }
}}>HEADER
    else if ( strcmp("{LABEL}", line ) == 0 ) {
      {LABEL}();
    }
FOOTER<{{
    else {
      lr_error_message("Cannot find function %s", line); 
      return -1; 
    }
  }
  return 0;
}
}}>FOOTER 